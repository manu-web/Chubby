syntax = "proto3";

package paxos;

service Paxos {
    rpc Propose(PaxosProposeRequest) returns (PaxosProposeResponse);
    rpc Accept(PaxosAcceptRequest) returns (PaxosAcceptResponse);
    rpc Write(WriteRequest) returns (WriteResponse);
    rpc Heartbeat(HeartbeatRequest) returns (Empty);
}

message PaxosProposeRequest {
    uint64 proposal_number = 1;
    uint64 log_index = 2;
}

message PaxosProposeResponse {
    uint64 last_accepted_proposal = 1;
    string last_accepted_value = 2;
    bool is_proposal_accepted = 3;
}

message PaxosAcceptRequest {
    uint64 proposal_number = 1;
    uint64 log_index = 2;
    string value = 3;
    uint64 commit_log_index = 4;
    string commit_log_value = 5;
}

message PaxosAcceptResponse {
    bool is_accepted = 1;
}

message WriteRequest {
    string key = 1;
    string value = 2;
}

message WriteResponse {
    string response = 1;
}

message HeartbeatRequest {
    uint64 server_index = 1;
    uint64 view = 2;
    repeated uint64 done = 3;
    map<uint64, PaxosSlot> slots = 4;
}

message HeartbeatResponse {
    string status = 1;
    map<uint64, PaxosSlot> slots = 2;
}

message PaxosSlot {
    uint64 n_p = 1;
    uint64 n_a = 2;
    string v_a = 3;
    uint64 status = 4;
}

message Empty{}